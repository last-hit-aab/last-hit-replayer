{"version":3,"sources":["../lib/handler/report-generator.ts"],"names":[],"mappings":";;;;;AAAA,8CAAwB;AACxB,0CAAoB;AACpB,0DAAoC;AAEpC,IAAM,gBAAgB,GAAG,oBAAoB,CAAC;AAC9C,IAAM,iBAAiB,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;AAE/C,oBAAU,CAAC,cAAc,CAAC,KAAK,EAAE,UAAS,IAAI;IAC5C,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AACxC,CAAC,CAAC,CAAC;AAEH,oBAAU,CAAC,cAAc,CAAC,IAAI,EAAE,UAAS,KAAK;IAC5C,OAAO,KAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG,CAAC;AAC/E,CAAC,CAAC,CAAC;AAEH,oBAAU,CAAC,cAAc,CAAC,MAAM,EAAE,UAAS,eAAe,EAAE,YAAY;IACtE,OAAO,CAAC,CAAC,eAAe,GAAG,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC;AAEH,oBAAU,CAAC,cAAc,CAAC,YAAY,EAAE,UAAS,OAAO;IACtD,0CAA0C;IAC1C,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;QACpC,OAAO,CAAC,MAAM,CAAC,iBAAiB,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI;YAC9C,OAAO,CACL,4CAA4C;gBAC5C,MAAM,CAAC,SAAS;gBAChB,WAAW;gBACX,4CAA4C;gBAC5C,MAAM,CAAC,QAAQ;gBACf,UAAU;gBACV,4CAA4C;gBAC5C,IAAI,CAAC,SAAS;gBACd,UAAU;iBACV,gFACgB,MAAM,CAAC,SAAS,UAAK,MAAM,CAAC,QAAQ,UAAK,IAAI,CAAC,QAAQ,wEAC/B,CAAA;iBACvC,gFACgB,MAAM,CAAC,SAAS,UAAK,MAAM,CAAC,QAAQ,UAAK,IAAI,CAAC,QAAQ,sEAC/B,CAAA;iBACvC,gFACgB,MAAM,CAAC,SAAS,UAAK,MAAM,CAAC,QAAQ,UAAK,IAAI,CAAC,QAAQ,oEAC/B,CAAA,CACxC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;AACvD,CAAC,CAAC,CAAC;AAEU,QAAA,cAAc,GAAG,UAAC,OAG9B;IACC,IAAI,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,EACvD,QAAQ,GAAG,oBAAU,CAAC,OAAO,CAC3B,YAAE,CAAC,YAAY,CAAC,YAAY,EAAE,iBAAiB,CAAC,CACjD,CAAC;IAEJ,IAAI;QACF,IAAM,OAAO,GAAG,QAAQ,CAAC;YACvB,OAAO,EAAE,OAAO,CAAC,OAAO;SACzB,CAAC,CAAC;QAEH,YAAE,CAAC,aAAa,CAAC,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,cAAc,EAAE,OAAO,CAAC,CAAC;KACtE;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACpB;AACH,CAAC,CAAC","file":"report-generator.js","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport handlebars from \"handlebars\";\n\nconst DEFAULT_TEMPLATE = \"report-default.hbs\";\nconst FILE_READ_OPTIONS = { encoding: \"utf8\" };\n\nhandlebars.registerHelper(\"len\", function(list) {\n  return (list || []).length.toString();\n});\n\nhandlebars.registerHelper(\"ms\", function(spent) {\n  return `${Math.round(parseInt((spent || \"\").split(\" \")[1].split(\"ms\")[0]))}`;\n});\n\nhandlebars.registerHelper(\"rate\", function(numberOfSuccess, numberOfStep) {\n  return ((numberOfSuccess / numberOfStep) * 100).toFixed(2);\n});\n\nhandlebars.registerHelper(\"screenlist\", function(results) {\n  //   console.log(JSON.stringify(results));\n  const itemsAsHtml = results.map(result => {\n    return (result.screenCompareList || []).map(step => {\n      return (\n        \"<td class='test-result-step-command-cell'>\" +\n        result.storyName +\n        \"</td>  \\n\" +\n        \"<td class='test-result-step-command-cell'>\" +\n        result.flowName +\n        \"</td> \\n\" +\n        \"<td class='test-result-step-command-cell'>\" +\n        step.stepIndex +\n        \"</td> \\n\" +\n        `<td class=\"test-result-step-command-cell\"><img\n\t\tsrc=\"screen-record\\\\${result.storyName}\\\\${result.flowName}\\\\${step.stepUuid}_baseline.png\"\n\t\tstyle=\"width:500px;height:300px;\" /></td> \\n` +\n        `<td class=\"test-result-step-command-cell\"><img\n\t\tsrc=\"screen-record\\\\${result.storyName}\\\\${result.flowName}\\\\${step.stepUuid}_replay.png\"\n\t\tstyle=\"width:500px;height:300px;\" /></td> \\n` +\n        `<td class=\"test-result-step-command-cell\"><img\n\t\tsrc=\"screen-record\\\\${result.storyName}\\\\${result.flowName}\\\\${step.stepUuid}_diff.png\"\n\t\tstyle=\"width:500px;height:300px;\" /></td> \\n`\n      );\n    });\n  });\n\n  return \"<tr>\\n\" + itemsAsHtml.join(\"\\n\") + \"\\n</tr>\";\n});\n\nexport const generateReport = (options: {\n  filename: string;\n  results: any;\n}): void => {\n  var htmlTemplate = path.join(__dirname, DEFAULT_TEMPLATE),\n    compiler = handlebars.compile(\n      fs.readFileSync(htmlTemplate, FILE_READ_OPTIONS)\n    );\n\n  try {\n    const content = compiler({\n      results: options.results\n    });\n\n    fs.writeFileSync(path.join(process.cwd()) + \"/report.html\", content);\n  } catch (err) {\n    console.error(err);\n  }\n};\n"]}