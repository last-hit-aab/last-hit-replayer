{"version":3,"sources":["../lib/handler/print.ts"],"names":[],"mappings":"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","file":"print.js","sourcesContent":["import { spawnSync } from 'child_process';\nimport fs from 'fs';\nimport jsonfile from 'jsonfile';\nimport path from 'path';\nimport { CoverageEntry } from 'puppeteer';\nimport Environment from '../config/env';\nimport * as pti from '../pti';\nimport { CoverageEntryRange, Coverages, Report } from '../types';\nimport { endTime, shorternUrl } from '../utils';\nimport { generateReport } from './report-generator';\nimport axios from 'axios';\n\nconst binarySearch = (target: CoverageEntryRange, array: Array<CoverageEntryRange>): number => {\n\tlet firstIndex = 0;\n\tlet lastIndex = array.length - 1;\n\tlet middleIndex = Math.floor((lastIndex + firstIndex) / 2);\n\twhile (firstIndex <= lastIndex) {\n\t\t// console.log(firstIndex, middleIndex, lastIndex);\n\t\tconst item = array[middleIndex];\n\t\tif (item.start === target.start && item.end === target.end) {\n\t\t\treturn middleIndex;\n\t\t} else if (target.start > item.end) {\n\t\t\tfirstIndex = middleIndex + 1;\n\t\t} else if (target.end < item.start) {\n\t\t\tlastIndex = middleIndex - 1;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tmiddleIndex = Math.floor((lastIndex + firstIndex) / 2);\n\t}\n\treturn 0 - middleIndex;\n};\n\nexport const print = async (env: Environment): Promise<void> => {\n\tconst reports: Array<Report> = [];\n\tconst coverageMap = {};\n\tconst allCoverageData: Coverages = [];\n\tconst workspace = env.getWorkspace();\n\n\tconst resultTempFolder = path.join(workspace, '.result-temp');\n\n\t(fs.readdirSync(resultTempFolder) || []).forEach(threadFolder => {\n\t\tconst summaryFilename = path.join(\n\t\t\tpath.join(resultTempFolder, threadFolder, 'summary.json')\n\t\t);\n\t\tconst report: Report[] = jsonfile.readFileSync(summaryFilename);\n\t\t(report || []).forEach(item => reports.push(item));\n\t\tconst coverageFilename = path.join(\n\t\t\tpath.join(resultTempFolder, threadFolder, 'coverages.json')\n\t\t);\n\t\tif (fs.existsSync(coverageFilename)) {\n\t\t\tconst coverageData: Coverages = jsonfile.readFileSync(coverageFilename);\n\t\t\tcoverageData.reduce((map, item: CoverageEntry) => {\n\t\t\t\tconst { ranges, text } = item;\n\t\t\t\tconst url = shorternUrl(item.url);\n\t\t\t\tlet data = map[url];\n\t\t\t\tif (!data) {\n\t\t\t\t\tdata = { url, ranges, text };\n\t\t\t\t\tallCoverageData.push(data);\n\t\t\t\t\tmap[url] = data;\n\t\t\t\t} else {\n\t\t\t\t\t(ranges || []).forEach(range => {\n\t\t\t\t\t\tconst index = binarySearch(range, data);\n\t\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\t\tdata.splice(index * -1 + 1, 0, range);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn map;\n\t\t\t}, coverageMap);\n\t\t}\n\t});\n\tgenerateReport({ filename: 'report.html', results: reports });\n\n\tconst adminUrl = env.getAdminUrl();\n\t// console.log(adminUrl);\n\tif (adminUrl) {\n\t\tconst used = endTime('all-used');\n\t\ttry {\n\t\t\tconst response = await axios.post(adminUrl, {\n\t\t\t\tspent: used,\n\t\t\t\tsummary: reports,\n\t\t\t\ttestPlan: {\n\t\t\t\t\tid: env.getAdminTestPlanId()\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\theaders: {\n\t\t\t\t\tauthorization: env.getAdminToken()\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.error('failed to push summary to admin server');\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\tpti.write(allCoverageData);\n\tspawnSync('nyc', [ 'report', '--reporter=html' ], { stdio: 'inherit' });\n\n\tconsole.table(\n\t\treports.map(item => {\n\t\t\treturn {\n\t\t\t\tStory: item.storyName,\n\t\t\t\tFlow: item.flowName,\n\t\t\t\tSteps: item.numberOfStep,\n\t\t\t\t'UI Behavior': item.numberOfUIBehavior,\n\t\t\t\tPassed: item.numberOfSuccess,\n\t\t\t\tFailed: item.numberOfFailed,\n\t\t\t\t'Ignored Errors': (item.ignoreErrorList || []).length,\n\t\t\t\t'Ajax calls': item.numberOfAjax,\n\t\t\t\t'Slow ajax calls': (item.slowAjaxRequest || []).length,\n\t\t\t\t'Spent (ms)': Math.round(\n\t\t\t\t\t((item.spent || '').split(' ')[1].split('ms')[0] as unknown) as number\n\t\t\t\t),\n\t\t\t\t'Pass Rate(%)': ((item.numberOfSuccess / item.numberOfStep) * 100)\n\t\t\t\t\t.toFixed(2)\n\t\t\t\t\t.toString()\n\t\t\t};\n\t\t}),\n\t\t[\n\t\t\t'Story',\n\t\t\t'Flow',\n\t\t\t'Steps',\n\t\t\t'UI Behavior',\n\t\t\t'Passed',\n\t\t\t'Failed',\n\t\t\t'Ignored Errors',\n\t\t\t'Ajax calls',\n\t\t\t'Slow ajax calls',\n\t\t\t'Spent (ms)',\n\t\t\t'Pass Rate(%)'\n\t\t]\n\t);\n};\n"]}