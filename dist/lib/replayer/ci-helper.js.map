{"version":3,"sources":["../lib/replayer/ci-helper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAAsC;AAGtC;IACC;IAAe,CAAC;IACV,0BAAa,GAAnB,UAAoB,IAAU;;;;;6BACzB,CAAC,kBAAU,EAAX,wBAAW;wBACd,6CAA6C;wBAC7C,qBAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,EAAA;;wBADrC,6CAA6C;wBAC7C,SAAqC,CAAC;;;;;;KAGvC;IACK,2BAAc,GAApB,UAAqB,KAAkB;;;;;;;wBAChC,SAAS,GAAyB,EAAE,CAAC;6BACvC,CAAC,kBAAU,EAAX,wBAAW;wBACd,qBAAM,KAAK,CAAC,MAAM,CAAC,UAAO,OAAsB,EAAE,IAAU;;;;gDAC3D,qBAAM,OAAO,EAAA;;4CAAb,SAAa,CAAC;;;;4CAET,UAAU,GAAyB,EAAE,CAAC;;;;4CAG5B,qBAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAA;;4CAAjD,UAAU,GAAG,SAAoC,CAAC;;;;4CAElD,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;4CAElB,QAAQ;4CACR,wDAAwD;4CACxD,gBAAgB;4CAChB,qBAAqB;4CACrB,IAAI;4CACJ,SAAS,CAAC,IAAI,OAAd,SAAS,EAAS,UAAU,EAAE;;;;;gDAI9B,sBAAO,OAAO,CAAC,OAAO,EAAE,EAAC;;;;iCAE1B,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,EAAA;;wBArBrB,SAqBqB,CAAC;;4BAEvB,sBAAO,SAAS,EAAC;;;;KACjB;IACF,SAAC;AAAD,CArCA,AAqCC,IAAA;AACD,kBAAe,IAAI,EAAE,EAAE,CAAC","file":"ci-helper.js","sourcesContent":["import { inElectron } from '../utils';\nimport { Page, CoverageEntry } from 'puppeteer';\n\nclass CI {\n\tconstructor() {}\n\tasync startCoverage(page: Page) {\n\t\tif (!inElectron) {\n\t\t\t// Enable both JavaScript coverage only in CI\n\t\t\tawait page.coverage.startJSCoverage();\n\t\t\t// await page.coverage.startCSSCoverage();\n\t\t}\n\t}\n\tasync gatherCoverage(pages: Array<Page>): Promise<Array<CoverageEntry>> {\n\t\tconst coverages: Array<CoverageEntry> = [];\n\t\tif (!inElectron) {\n\t\t\tawait pages.reduce(async (promise: Promise<void>, page: Page): Promise<void> => {\n\t\t\t\tawait promise;\n\t\t\t\ttry {\n\t\t\t\t\tlet jsCoverage: Array<CoverageEntry> = [];\n\t\t\t\t\t// let cssCoverage = [];\n\t\t\t\t\ttry {\n\t\t\t\t\t\tjsCoverage = await page.coverage.stopJSCoverage();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\t\t\t\t\t// try {\n\t\t\t\t\t// \tcssCoverage = await page.coverage.stopCSSCoverage();\n\t\t\t\t\t// } catch (e) {\n\t\t\t\t\t// \tconsole.error(e);\n\t\t\t\t\t// }\n\t\t\t\t\tcoverages.push(...jsCoverage);\n\t\t\t\t} catch {\n\t\t\t\t\t// ignore\n\t\t\t\t} finally {\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t}, Promise.resolve());\n\t\t}\n\t\treturn coverages;\n\t}\n}\nexport default new CI();\n"]}