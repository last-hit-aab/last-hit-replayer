{"version":3,"sources":["../lib/replayer/replayer-abandoner.ts"],"names":[],"mappings":";;AAAA,kCAA+C;AAM/C,IAAM,OAAO,GAAG,UAAC,SAAwB,EAAE,SAAiB,EAAE,QAAgB;IAC7E,IAAM,GAAG,GAAG,2BAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACrD,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAChC,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;IACtB,OAAO,QAAQ,CAAC;AACjB,CAAC,CAAC;AAEF,mBAAe,UAAC,SAAwB;IACvC,OAAO,UAAC,SAAiB,EAAE,QAAgB;QAC1C,OAAA,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;IAAvC,CAAuC,CAAC;AAC1C,CAAC,EAAC","file":"replayer-abandoner.js","sourcesContent":["import { generateKeyByString } from '../utils';\nimport Replayer from './replayer';\nimport { ReplayerCache } from './replayers-cache';\n\nexport type ReplayerAbandoner = (storyName: string, flowName: string) => Replayer | undefined;\n\nconst abandon = (replayers: ReplayerCache, storyName: string, flowName: string): Replayer => {\n\tconst key = generateKeyByString(storyName, flowName);\n\tconst replayer = replayers[key];\n\tdelete replayers[key];\n\treturn replayer;\n};\n\nexport default (replayers: ReplayerCache): ReplayerAbandoner => {\n\treturn (storyName: string, flowName: string): Replayer | undefined =>\n\t\tabandon(replayers, storyName, flowName);\n};\n"]}