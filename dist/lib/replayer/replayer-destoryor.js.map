{"version":3,"sources":["../lib/replayer/replayer-destoryor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,OAAO,GAAG,UAAC,SAAwB,EAAE,MAAe;IACzD,MAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAC/C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAM,GAAG;;;;;oBACvC,MAAM,CAAC,IAAI,CAAC,+BAA6B,GAAG,MAAG,CAAC,CAAC;oBAC3C,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;oBAC5C,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;yBAElB,OAAO,EAAP,wBAAO;oBACV,IAAI;wBACH,OAAO,CAAC,UAAU,EAAE,CAAC;qBACrB;oBAAC,WAAM;wBACP,SAAS;qBACT;;;;oBAEA,qBAAM,OAAO,CAAC,KAAK,EAAE,EAAA;;oBAArB,SAAqB,CAAC;;;;;;;;SAKxB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,mBAAe,UAAC,SAAwB,EAAE,MAAe;IACxD,OAAO,cAAY,OAAA,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,EAA1B,CAA0B,CAAC;AAC/C,CAAC,EAAC","file":"replayer-destoryor.js","sourcesContent":["import { ReplayerCache } from './replayers-cache';\n\nexport type ReplayerDestroyer = () => void;\n\nconst destory = (replayers: ReplayerCache, logger: Console) => {\n\tlogger.info('destory all puppeteer browsers.');\n\tObject.keys(replayers).forEach(async key => {\n\t\tlogger.info(`destory puppeteer browser[${key}]`);\n\t\tconst browser = replayers[key].getBrowser();\n\t\tdelete replayers[key];\n\n\t\tif (browser) {\n\t\t\ttry {\n\t\t\t\tbrowser.disconnect();\n\t\t\t} catch {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait browser.close();\n\t\t\t} catch {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t});\n};\n\nexport default (replayers: ReplayerCache, logger: Console): ReplayerDestroyer => {\n\treturn (): void => destory(replayers, logger);\n};\n"]}